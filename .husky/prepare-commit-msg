#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "prepare-commit-msg hook starting..." > /tmp/husky-debug.log

# Get commit message file path from args
COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

echo "COMMIT_MSG_FILE: $COMMIT_MSG_FILE" >> /tmp/husky-debug.log
echo "COMMIT_SOURCE: $COMMIT_SOURCE" >> /tmp/husky-debug.log

# Only run coco if this is a regular commit
if [ -z "$COMMIT_SOURCE" ]; then
    echo "Running coco..." >> /tmp/husky-debug.log
    
    # Save the original message
    temp_file=$(mktemp)
    cat "$COMMIT_MSG_FILE" > "$temp_file"
    
    # Get the coco output
    coco_output=$(coco)
    
    if [ $? -eq 0 ]; then
        echo "coco succeeded" >> /tmp/husky-debug.log
        # Clear the commit message file
        : > "$COMMIT_MSG_FILE"
        
        # Write coco output to the commit message file
        echo "$coco_output" > "$COMMIT_MSG_FILE"
        
        # Append the original message after coco output
        cat "$temp_file" >> "$COMMIT_MSG_FILE"
    else
        echo "coco failed" >> /tmp/husky-debug.log
        echo "coco command failed, keeping original commit message"
    fi
    
    rm "$temp_file"
fi

# Make sure we have TTY access for Commitizen prompts
exec < /dev/tty